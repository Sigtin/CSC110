package Scratch;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ScratchClass {
	
	private static BufferedReader readRacer = new BufferedReader(new InputStreamReader(System.in));
	
	public static void run() throws IOException{
//		Print to the console the sum of 10 random numbers between 1 and 100 inclusive
//		Random randAlThor = new Random();
//		UpperBound = High - Low + 1
//		nextInt(UpperBound) + Low
//		int randomNum = 0;
//		for(int i = 0; i < 10; i++){
//			randomNum += randAlThor.nextInt(100)+1;
//		}
//		System.out.println(randomNum);
		
		//Prompt the user for the size of the array
		//Declare and initialize the array to the size specified by the user
		System.out.print("Please enter the desired array size: ");
		String size = readRacer.readLine();
		int input = Integer.parseInt(size);
		int[] nums = new int[input];
		
		//Write a for loop that populates the array so that each "bucket"
			//contains multiples of 5 (starting at 5)
		
		for(int i = 0; i < nums.length; i++){
			nums[i] = (i+1)*5;
			System.out.println(i);
		}
		
	}
	public static void main(String[] args) throws IOException{
		run();
		
		/*
		 * Data types
		 * 
		 * The 8 Primitives
		 * Numeric Primitives
		 * 		Integral Primitives
		 * byte - 8 bits - range: -128 to 127 (256 distinct values)
		 * short - 16 bits - range: -32,768 to 32,767
		 * int - 32 bits - range: -2,147,483,648 to 2,147,483,647
		 * long - 64 bits - range: -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
		 * 		Floating Point Primitives
		 * float - 32 bits (up to 7 significant decimal places)
		 * double - 64 bits (up to 15 significant decimal places)
		 * 
		 * Non-Numeric Primitives
		 * boolean - true/false
		 * char - single character (ASCII or Unicode)
		 * 
		 */
		
		//if
		//if-if
		//if-else
		//if-else if
		//if-else if-else
		
		//Declaring a local variable
			//Data type
			//Alias (aka name)
			//Initialize (optionally on a separate line)
		
		//Three major forms of errors in programming
		//1. Compiler errors
		//2. Runtime errors
		//3. Logical errors
		
		
	 }
}
